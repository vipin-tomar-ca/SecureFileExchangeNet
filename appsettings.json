
{
  "Logging": {
    "LogLevel": {
      "Default": "Information",
      "Microsoft.AspNetCore": "Warning"
    }
  },
  "AllowedHosts": "*",
  "Email": {
    "SmtpHost": "smtp.gmail.com",
    "SmtpPort": "587",
    "Username": "",
    "Password": ""
  },
  "RabbitMQ": {
    "Host": "localhost",
    "Port": 5672,
    "Username": "guest",
    "Password": "guest",
    "VirtualHost": "/",
    "UseTls": true
  },
  "Vendors": {
    "vendor1": {
      "VendorId": "vendor1",
      "Name": "Sample Vendor 1",
      "Sftp": {
        "Host": "sftp.vendor1.com",
        "Port": 22,
        "Username": "securefileexchange",
        "PrivateKeyPath": "/app/keys/vendor1_private_key",
        "RemotePath": "/incoming",
        "LocalPath": "/app/data/vendor1",
        "PollIntervalSeconds": 300
      },
      "Email": {
        "FromAddress": "noreply@securefileexchange.com",
        "ToAddress": "contact@vendor1.com",
        "ImapHost": "imap.gmail.com",
        "ImapPort": 993,
        "ImapUsername": "monitoring@securefileexchange.com",
        "ImapPassword": ""
      },
      "Rules": {
        "FieldRules": [
          {
            "FieldName": "id",
            "DataType": "string",
            "Required": true,
            "Pattern": "^[A-Z0-9]{8}$",
            "MinLength": 8,
            "MaxLength": 8
          },
          {
            "FieldName": "amount",
            "DataType": "decimal",
            "Required": true,
            "Pattern": "^\\d+\\.\\d{2}$"
          }
        ],
        "BusinessRules": [
          {
            "RuleId": "AMOUNT_POSITIVE",
            "Description": "Amount must be positive",
            "Expression": "amount > 0",
            "ErrorMessage": "Amount must be greater than zero"
          }
        ]
      }
    }
  },
  "Serilog": {
    "Using": ["Serilog.Sinks.Console"],
    "MinimumLevel": "Information",
    "WriteTo": [
      {
        "Name": "Console",
        "Args": {
          "outputTemplate": "{Timestamp:yyyy-MM-dd HH:mm:ss.fff zzz} [{Level:u3}] {Message:lj}{NewLine}{Exception}"
        }
      }
    ],
    "Enrich": ["FromLogContext"]
  }
}
